Analiza wymagań programu Lista zadań

Funkcjonalność:

1. Program wyświetla wcześniej zapisane zadania.
2. Możliwość dodania nowego zadania.
3. Możliwość usunięcia dodanego wcześniej zadania. 
4. Możliwość edycji dodanego wcześniej zadania. 

Program Lista zadań został utworzony w środowisku programistycznym PyCharm. 

Struktury danych:

1. Program wykorzystuje klasę 'Zadanie'. Klasa ta posiada 5 atrybutów: temat, termin, opis, data rozpoczęcia, status; oraz 2 metody: metodę klasową nowe_zadanie oraz metodę statyczną zapisz_zadanie. Klasa jest zapisana w pliku Zadanie.py. 

2. Funkcje użyte w funkcji main są zapisane w pliku Funkcje.py. Funkcja pokaż_zadania posiada dekorator termin, który przed wyświetleniem zadań sprawdza czy któreś z zadań nie jest już po terminie, jeśli data terminu jest wcześniejsza niż data dzisiejsza, a użytkownik ręcznie nie zmienił statusu na 'ukończone'to dekorator termin zmieni status na 'po terminie'. 

3. Funkcja pokaż_opcję wyświetla listę dostępnych opcji, funkcja wybierz_opcję odczytuje input użytkownika i wykonuje wybraną opcję poprzed uruchomienie jednej z dostępnych funkcji. wybierz_opcję wykorzystuje metody klasy Zadanie oraz funkcje: edytuj_zadanie, usuń_zadanie oraz sys.exit. 

4. Funkcja main wykorzystuje funkcje: pokaż_zadanie, pokaż_opcje i wybierz_opcję.

5. Program wykorzystuje listy i słowniki do przechowania kopii pliku csv do umożliwienia jego edycji. Lista jest wykorzystana w funkcji pokaż_opcje do zapisania wszystkich dostępnych opcji oraz w funkcji edytuj_zadanie do przechowania możliwych statusów. 

6. Program wykorzystuje plik csv do przechowywania zapisanych zadań. 

7. Program wykorzystuje biblioteki csv, sys, datetime, re. 

Zapobieganie błędom:

1. Program używa pętli while do sprawdzenia czy data podana przez użytkownika jest w odpowiednim formacie. Jeśli format jest inny niz DD/MM/RR to użytkownik będzie miał okazję ponownie wprowadzić datę. Program używa funkcji match z biblioteki re do porównania formatu wprowadzonego przez użytkownika do poprawnego formatu. 

2. Program używa funkcji lower do ujednolicenia tematu wprowadzonego przez użytkownika

3. Przy ręcznej zmianie statusu program wyświetla dostępne statusy do wyboru, jeśli użytkownik wprowadzi niepoprawny status program się wyłączy.

4. Jeżeli użytkownik wprowadzi numer opcji, która nie istnieje lub słowną nazwę to program wyświetli błąd i pozwoli ponownie wybrać opcję. 


